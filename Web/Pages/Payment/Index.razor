@page "/payments"
@using FutterlisteNg.Data.Model
@using FutterlisteNg.Domain.Service
@using FutterlisteNg.Web.Service
@using FutterlisteNg.Web.Components
@using Microsoft.AspNetCore.Components
@inject IToastService ToastService
@inject IPaymentService PaymentService
@inject NavigationManager NavigationManager

<h2>Payments</h2>

@if (_payments == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Payed by</th>
            <th>Description</th>
            <th>Amount</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @if (_payments.Length == 0)
        {
            <p>No users found.</p>
        }
        else
        {
            foreach (var payment in _payments)
            {
                <tr>
                    <td>@payment.PayedBy</td>
                    <td>@payment.Description</td>
                    <td>@payment.TotalAmount</td>
                    <td>
                        <EditButton OnClick="(() => OpenPayment(payment))"/>
                        <DeleteButton OnClick="(() => DeletePayment(payment))"/>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
}

<div class="fixed-action-btn">
    <a class="btn-floating btn-large red" href="/payments/create">
        <i class="material-icons">add</i>
    </a>
</div>

@code {
    Payment[] _payments;

    protected override async Task OnInitializedAsync()
    {
        await LoadPayments();
    }

    private async Task LoadPayments()
    {
        _payments = (await PaymentService.FindAllAsync()).ToArray();
        StateHasChanged();
    }

    private async Task DeletePayment(Payment payment)
    {
        await PaymentService.DeleteAsync(payment.Id);
        await LoadPayments();
        await ToastService.Success("Payment deleted");
    }

    private void OpenPayment(Payment payment)
    {
        NavigationManager.NavigateTo("/payments/edit/" + payment.Id);
    }

}